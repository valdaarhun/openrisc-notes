From 3168ad83369237c1fe0d06187d15581de06b5a77 Mon Sep 17 00:00:00 2001
From: Sahil Siddiq <sahilcdq@proton.me>
Date: Tue, 11 Mar 2025 00:27:53 +0530
Subject: [PATCH 2/2] OpenRISC: Initialize dcache and icache registers

Initialize data cache and instruction cache registers with dummy
values to emulate the processor's view of CPU cache.

Signed-off-by: Sahil Siddiq <sahilcdq@proton.me>
---
 target/openrisc/cpu.c        | 26 ++++++++++++++++++++++++++
 target/openrisc/cpu.h        | 27 +++++++++++++++++++++++++++
 target/openrisc/machine.c    |  2 ++
 target/openrisc/sys_helper.c |  6 ++++++
 4 files changed, 61 insertions(+)

diff --git a/target/openrisc/cpu.c b/target/openrisc/cpu.c
index d81d205a6f..f2971b5363 100644
--- a/target/openrisc/cpu.c
+++ b/target/openrisc/cpu.c
@@ -205,6 +205,19 @@ static void or1200_initfn(Object *obj)
                    UPR_PICP | UPR_TTP | UPR_PMP;
     cpu->env.cpucfgr = CPUCFGR_NSGF | CPUCFGR_OB32S | CPUCFGR_OF32S |
                        CPUCFGR_EVBARP;
+    
+    /* 4-way 16KB data cache */
+    cpu->env.dccfgr = 0 | (DCCFGR_NCW & (1 << 1))
+                    | (DCCFGR_NCS & (8 << 3))
+                    | (DCCFGR_CBS & (0 << 7))
+                    | DCCFGR_CBIRI
+                    | DCCFGR_CBFRI;
+
+    /* Direct-mapped 8KB instruction cache */
+    cpu->env.iccfgr = 0 | (ICCFGR_NCW & (0 << 2))
+                    | (ICCFGR_NCS & (9 << 3))
+                    | (ICCFGR_CBS & (0 << 7))
+                    | ICCFGR_CBIRI;
 
     /* 1Way, TLB_SIZE entries.  */
     cpu->env.dmmucfgr = (DMMUCFGR_NTW & (0 << 2))
@@ -226,6 +239,19 @@ static void openrisc_any_initfn(Object *obj)
     cpu->env.cpucfgr = CPUCFGR_NSGF | CPUCFGR_OB32S | CPUCFGR_OF32S |
                        CPUCFGR_AVRP | CPUCFGR_EVBARP | CPUCFGR_OF64A32S;
 
+    /* 4-way 16KB data cache */
+    cpu->env.dccfgr = 0 | (DCCFGR_NCW & (1 << 1))
+                    | (DCCFGR_NCS & (8 << 3))
+                    | (DCCFGR_CBS & (0 << 7))
+                    | DCCFGR_CBIRI
+                    | DCCFGR_CBFRI;
+
+    /* Direct-mapped 8KB instruction cache */
+    cpu->env.iccfgr = 0 | (ICCFGR_NCW & (0 << 2))
+                    | (ICCFGR_NCS & (9 << 3))
+                    | (ICCFGR_CBS & (0 << 7))
+                    | ICCFGR_CBIRI;
+
     /* 1Way, TLB_SIZE entries.  */
     cpu->env.dmmucfgr = (DMMUCFGR_NTW & (0 << 2))
                       | (DMMUCFGR_NTS & (ctz32(TLB_SIZE) << 2));
diff --git a/target/openrisc/cpu.h b/target/openrisc/cpu.h
index b97d2ffdd2..6ef791f9b1 100644
--- a/target/openrisc/cpu.h
+++ b/target/openrisc/cpu.h
@@ -113,6 +113,31 @@ enum {
     IMMUCFGR_HTR = (1 << 11),
 };
 
+/* Data cache configure register */
+enum {
+    DCCFGR_NCW = (7 << 0),
+    DCCFGR_NCS = (15 << 3),
+    DCCFGR_CBS = (1 << 7),
+    DCCFGR_CWS = (1 << 8),
+    DCCFGR_CCRI = (1 << 9),
+    DCCFGR_CBIRI = (1 << 10),
+    DCCFGR_CBPRI = (1 << 11),
+    DCCFGR_CBLRI = (1 << 12),
+    DCCFGR_CBFRI = (1 << 13),
+    DCCFGR_CBWBRI = (1 << 14),
+};
+
+/* Instruction cache configure register */
+enum {
+    ICCFGR_NCW = (7 << 0),
+    ICCFGR_NCS = (15 << 3),
+    ICCFGR_CBS = (1 << 7),
+    ICCFGR_CCRI = (1 << 9),
+    ICCFGR_CBIRI = (1 << 10),
+    ICCFGR_CBPRI = (1 << 11),
+    ICCFGR_CBLRI = (1 << 12),
+};
+
 /* Power management register */
 enum {
     PMR_SDF = (15 << 0),
@@ -272,6 +297,8 @@ typedef struct CPUArchState {
     uint32_t avr;             /* Architecture version register */
     uint32_t upr;             /* Unit presence register */
     uint32_t cpucfgr;         /* CPU configure register */
+    uint32_t dccfgr;          /* Data cache configure register */
+    uint32_t iccfgr;          /* Instruction cache configure register */
     uint32_t dmmucfgr;        /* DMMU configure register */
     uint32_t immucfgr;        /* IMMU configure register */
 
diff --git a/target/openrisc/machine.c b/target/openrisc/machine.c
index 3574e571cb..d881bbbbef 100644
--- a/target/openrisc/machine.c
+++ b/target/openrisc/machine.c
@@ -101,6 +101,8 @@ static const VMStateDescription vmstate_env = {
         VMSTATE_UINT32(cpucfgr, CPUOpenRISCState),
         VMSTATE_UINT32(dmmucfgr, CPUOpenRISCState),
         VMSTATE_UINT32(immucfgr, CPUOpenRISCState),
+        VMSTATE_UINT32(dccfgr, CPUOpenRISCState),
+        VMSTATE_UINT32(iccfgr, CPUOpenRISCState),
         VMSTATE_UINT32(evbar, CPUOpenRISCState),
         VMSTATE_UINT32(pmr, CPUOpenRISCState),
         VMSTATE_UINT32(esr, CPUOpenRISCState),
diff --git a/target/openrisc/sys_helper.c b/target/openrisc/sys_helper.c
index 21bc137ccc..b9abd3b9ad 100644
--- a/target/openrisc/sys_helper.c
+++ b/target/openrisc/sys_helper.c
@@ -251,6 +251,12 @@ target_ulong HELPER(mfspr)(CPUOpenRISCState *env, target_ulong rd,
     case TO_SPR(0, 4): /* IMMUCFGR */
         return env->immucfgr;
 
+    case TO_SPR(0, 5): /* DCCFGR */
+        return env->dccfgr;
+
+    case TO_SPR(0, 6): /* ICCFGR */
+        return env->iccfgr;
+
     case TO_SPR(0, 9): /* VR2 */
         return env->vr2;
 
-- 
2.48.1

